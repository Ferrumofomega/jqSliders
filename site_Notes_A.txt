on('change')
	1. Store 'eventsDisabled' in cookies, delete/restore depending on conditions:
		-Doesn't work now.

	2. Don't disable events.
		-Calls the change function twice-indefinitely. Bad.
		
***	3. In the documentation, when you ('setValue',newValue, FALSE) then it disables the 'slide' event
		Need to check if it also disables the 'change' event. Look at the .js file cause 'slide' and 'change' are documented adjacently.
		
on('slide')
	1. Primary problem is you can't get the oldValue from the slider, so can't do logic with the pointsBox etc.
	
***	2. Another option is to keep the value label and only change it after a confirmed change. That way the text will have the oldValue from the slider



Page 4:
2. Remember you can call other JS functions from the HTML page.
3. In the documentation, when you ('setValue',newValue, FALSE) then it disables the 'slide' event. Does NOT also disable the 'change' event.
4. The 'slideStart' event and 'slideStop'...see how those are implemented and if possible at all.
5. Could also use text values to store the value at the start of sliding. Or store things in secret places in the page, invisibly.
6. Something about the timing of when you 'setValue'.

* 'slideStart' gets NEW VALUE therefore it will never get the right starting value if you move quickly.
1. The 'change' event is pretty much useless. Never use it.
2. Store all slider values in cookies

Page 5:

1. Same as 4, really.

Page 6:

1. After onPageLoad(), call another function that will randomize all the values in the sliders by +- 20%.
	-If does not work then must make a clause in the makeSliders() function
	-Ok so it's not going to work pretty much. You need to just make a clause for page 6. No pointsBox bullshit necessary.
	-randomizeSliders() is still being called though yo!
2. Need one more slider per slider, that will let them set how much it still represents them.
	-Do this by calling the function from Page6, and make elements with different class names for "ratingSlider"
3. Store the values in meaningful ways.

Page 7:

1. Just the same set of sliders with parent values. Easy page.

Page 8:

1. Same as page 7.

Page 9:
Hardest page.

1. Format it correctly
2. Make all the separate boxes work with the sliders.

Page 10:

1. 3 textboxes paired with 3 sliders
2. 2 larger text areas with prompts for the user.
3. Space for demographic variables
4. Feedback / comments
5. Final submit button has class="nextLink" cause it needs to go to page11 but it has id="finalSubmit"